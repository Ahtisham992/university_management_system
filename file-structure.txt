University-Management-System/
|__k8s/
    ├── backend/
    │   ├── deployment.yaml
    │   ├── service.yaml
    │   ├── secrets.yaml
    ├── frontend/
    │   ├── deployment.yaml
    │   ├── service.yaml
    ├── mongodb/
    │   ├── deployment.yaml
    │   ├── persistant-volumne-claim.yaml
    │   ├── service.yaml
    │   ├── secrets.yaml
    ├── configmap.yaml
    ├── kustomization.yaml
|__app/
    ├── backend/
    │   ├── controllers/
    │   ├── models/
    │   ├── routes/
    │   ├── index.js
    │   ├── package.json
    │   ├── .env
    │   ├── .gitignore
    ├── frontend/
    │   ├── public/
    │   ├── src/
    │   │   ├── assets/
    │   │   ├── components/
    │   │   ├── pages/
    │   │   │   ├── admin/
    │   │   │   ├── student/
    │   │   │   ├── teacher/
    │   │   ├── redux/
    │   │   ├── App.js
    │   │   ├── index.js
    │   │   ├── store.js
    │   │   ├── package.json
    │   │   ├── .gitignore
|   │   ├── .gitignore
|   │   ├── package.json
│   ├── README.md
|___backend.Dockerfile
|___frontend.Dockerfile
|___Dockerfile
|___docker-compose.yml
|___start.sh


backend.Dockerfile

FROM node:18

WORKDIR /app/backend

# Copy package.json and package-lock.json files
COPY ./app/backend/package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the backend code
COPY ./app/backend ./

# Environment variables
ENV NODE_ENV=production

# Expose the port your backend runs on
EXPOSE 3000

# Start the server
CMD ["node", "index.js"]

docker-compese.yml

version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=shamimuhammad77
      - MONGO_INITDB_ROOT_PASSWORD=helloAhtisham
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    container_name: ums-backend
    ports:
      - "3000:3000"  # Backend now runs on port 3000
    depends_on:
      - mongodb
    environment:
      - MONGODB_URI=mongodb+srv://shamimuhammad77:helloAhtisham@cluster1.yvtj5.mongodb.net/UMS?retryWrites=true&w=majority&appName=Cluster0
      - PORT=3000
      - NODE_ENV=production
      - JWT_SECRET=your_jwt_secret
      - STRIPE_SECRET_KEY=sk_test_placeholder
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: ums-frontend
    ports:
      - "5000:80"  # Map port 5000 to nginx/static frontend
    depends_on:
      - backend
    environment:
      - REACT_APP_BASE_URL=http://localhost:3000
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local


|___frontend.Dockerfile

FROM node:18 as build

WORKDIR /app/frontend

# Copy package.json and package-lock.json files
COPY ./app/frontend/package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the frontend code
COPY ./app/frontend ./

# Build the React app
RUN npm run build

# Production environment
FROM nginx:stable-alpine

# Copy the build folder from the build stage
COPY --from=build /app/frontend/build /usr/share/nginx/html

# Expose port 80
EXPOSE 80

# Start Nginx server
CMD ["nginx", "-g", "daemon off;"]

|___Dockerfile

FROM node:18 as backend-build

# Set up backend
WORKDIR /app/backend
COPY ./app/backend/package*.json ./
RUN npm install
COPY ./app/backend ./

# Build frontend
FROM node:18 as frontend-build
WORKDIR /app/frontend
COPY ./app/frontend/package*.json ./
RUN npm install
COPY ./app/frontend ./
RUN npm run build

# Production environment
FROM node:18-slim

# Set up app directory
WORKDIR /app

# Copy backend from build stage
COPY --from=backend-build /app/backend /app/backend

# Copy frontend build from frontend-build stage
COPY --from=frontend-build /app/frontend/build /app/frontend/build

# Install serve to serve the frontend static files
RUN npm install -g serve

# Set environment variables including Stripe API key
ENV NODE_ENV=production
ENV STRIPE_SECRET_KEY="your_stripe_secret_key"
ENV MONGODB_URI="mongodb+srv://shamimuhammad77:helloAhtisham@cluster1.yvtj5.mongodb.net/UMS?retryWrites=true&w=majority&appName=Cluster0"
ENV JWT_SECRET="your_jwt_secret"

# Expose ports
EXPOSE 3000
EXPOSE 5000

# Start both services using a script
COPY start.sh /app/start.sh
RUN chmod +x /app/start.sh

CMD ["/app/start.sh"]


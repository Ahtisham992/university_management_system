name: Build and Deploy to Minikube

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup working directory
      run: |
        # Ensure the checkout is complete
        echo "Working directory: $(pwd)"
        ls -la
      shell: bash
      
    - name: Create needed directories
      run: |
        # Create frontend/public if it doesn't exist
        mkdir -p app/frontend/public
        
        # Create a simple index.html if needed
        if [ ! -f app/frontend/public/index.html ]; then
          echo '<!DOCTYPE html><html><head><title>UMS</title></head><body><div id="root"></div></body></html>' > app/frontend/public/index.html
        fi
      shell: bash
      
    - name: Set up Minikube Docker environment
      run: |
        # Make sure minikube is running
        minikube status || minikube start
        # Set up the Docker environment
        eval $(minikube -p minikube docker-env)
      shell: bash
      
    - name: Build Backend Docker image
      run: |
        echo "Building backend Docker image..."
        docker build -t ahtisham05/university-management-system-backend:latest -f backend.Dockerfile .
      shell: bash
      
    - name: Build Frontend Docker image
      run: |
        echo "Building frontend Docker image..."
        docker build -t ahtisham05/university-management-system-frontend:latest -f frontend.Dockerfile .
      shell: bash
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Push Docker images
      run: |
        echo "Pushing Docker images to Docker Hub..."
        docker push ahtisham05/university-management-system-backend:latest
        docker push ahtisham05/university-management-system-frontend:latest
      shell: bash
      
    - name: Verify Kubernetes environment
      run: |
        echo "Checking Kubernetes status..."
        kubectl version --client
        minikube status
      shell: bash
      
    - name: Create namespace
      run: |
        echo "Creating or verifying namespace..."
        kubectl create namespace ums-system --dry-run=client -o yaml | kubectl apply -f -
      shell: bash
      
    - name: Deploy using Kustomize
      run: |
        echo "Deploying with Kustomize..."
        kubectl apply -k k8s/
      shell: bash
      
    - name: Wait for deployments
      run: |
        echo "Waiting for deployments to become ready..."
        kubectl -n ums-system rollout status deployment/ums-backend --timeout=180s || true
        kubectl -n ums-system rollout status deployment/ums-frontend --timeout=180s || true
        kubectl -n ums-system rollout status deployment/mongodb --timeout=180s || true
      shell: bash
      
    - name: Show deployed resources
      run: |
        echo "Displaying all deployed resources..."
        kubectl get all -n ums-system
      shell: bash
      
    - name: Display service URL
      run: |
        echo "Application is accessible at:"
        echo "Frontend: $(minikube service ums-frontend -n ums-system --url)"
        echo "Backend: $(kubectl get svc ums-backend -n ums-system -o jsonpath='{.spec.clusterIP}:{.spec.ports[0].port}')"
      shell: bash